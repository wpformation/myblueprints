blueprint:
  name: Alerte multi-capteurs avec notification et actions
  description: >
    Ce blueprint gère les alertes basées sur plusieurs capteurs binaires, permettant 
    d'envoyer des notifications dynamiques, de déclencher des alertes vocales, 
    et d'allumer des lumières en rouge.
  domain: automation
  input:
    binary_sensors:
      name: Liste des capteurs déclencheurs
      description: Liste des capteurs binaires qui déclenchent l'alerte (fumée, fuite, etc.)
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    phone_notifications:
      name: Notifications téléphoniques
      description: Liste des services `notify` pour les notifications téléphoniques
      selector:
        target:
          device: {}
    telegram_notifications:
      name: Notifications Telegram
      description: Activer les notifications Telegram
      default: false
      selector:
        boolean: {}
    telegram_message:
      name: Message Telegram
      description: Message à envoyer via Telegram si activé
      default: >
        "Alerte ! {{ trigger.to_state.attributes.friendly_name }} s'est déclenché(e)."
    tts_targets:
      name: Enceintes pour TTS
      description: Entités media_player où envoyer l'alerte vocale
      selector:
        entity:
          domain: media_player
          multiple: true
    lights:
      name: Lumières à activer
      description: Lumières à allumer en rouge pour signaler l'alerte
      selector:
        entity:
          domain: light
          multiple: true
    alert_message:
      name: Message d'alerte
      description: Message personnalisé pour les notifications
      default: >
        "Attention ! Le capteur {{ trigger.to_state.attributes.friendly_name }} dans la pièce {{ trigger.to_state.attributes.device_class }} a détecté une anomalie."
    delay_before_reset:
      name: Délai avant extinction des lumières
      description: Temps en secondes avant d'éteindre les lumières d'alerte
      default: 60
      selector:
        number:
          min: 10
          max: 600
          step: 5

trigger:
  - platform: state
    entity_id: !input binary_sensors
    to: 'on'

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ input.telegram_notifications }}"
        sequence:
          - service: telegram_bot.send_message
            data:
              message: !input telegram_message

  - service: notify.notify
    data:
      message: !input alert_message
      target: !input phone_notifications

  - service: tts.cloud_say
    data:
      entity_id: !input tts_targets
      message: >
        "Attention : {{ trigger.to_state.attributes.friendly_name }} dans la pièce {{ trigger.to_state.attributes.device_class }} détecte une anomalie. Merci de vérifier immédiatement."

  - service: light.turn_on
    target: !input lights
    data:
      color_name: red
      brightness: 255

  - delay:
      seconds: !input delay_before_reset

  - service: light.turn_off
    target: !input lights
